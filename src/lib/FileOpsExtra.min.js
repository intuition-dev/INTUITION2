// mB v6.06.07 on 2019-06-11T16:59:39.367Z
"use strict"
Object.defineProperty(exports,"__esModule",{value:!0})
var Base_1=require("./Base"),FileOpsBase_1=require("./FileOpsBase"),FileHound=require("filehound"),logger=require("tracer").console(),fs=require("fs-extra"),csv2JsonV2=require("csvtojson"),AdmZip=require("adm-zip"),download=require("download"),yaml=require("js-yaml"),DownloadFrag=function(){return function DownloadFrag(o,n){n||new Download("headFrag",o).auto(),n&&(new Download("opsPug",o).auto(),new Download("opsJs",o).auto())}}()
exports.DownloadFrag=DownloadFrag
var VersionNag=function(){function VersionNag(){}return VersionNag.isCurrent=function(){return new Download("mbake",null).checkVer()},VersionNag}()
exports.VersionNag=VersionNag
var Download=function(){function Download(o,n){this.key=o,this.targetDir=n}return Download.prototype.autoZ=function(){var o=this
this.getVal().then(function(n){logger.trace(n)
var t=o.getFn(n)
logger.trace(t),o.down(n,t).then(function(){o.unzip(t)})})},Download.prototype.auto=function(){var o=this
this.getVal().then(function(n){var t=o.getFn(n)
o.down(n,t)})},Download.prototype.checkVer=function(){var o=this
return new Promise(function(n,t){o.getVal().then(function(o){logger.trace(o),o==Base_1.Ver.ver()?n(!0):n(!1)})})},Download.prototype.getVal=function(){var o=this
return new Promise(function(n,t){download(Download.truth).then(function(t){var e=yaml.load(t)
logger.trace(o.key,e),n(e[o.key])})})},Download.prototype.getFn=function(o){var n=o.lastIndexOf("/")
return o.substring(n)},Download.prototype.down=function(o,n){var t=this
return new Promise(function(e,r){download(o).then(function(o){fs.writeFileSync(t.targetDir+"/"+n,o),e("OK")})})},Download.prototype.unzip=function(o){new AdmZip(this.targetDir+"/"+o).extractAllTo(this.targetDir,!0),fs.remove(this.targetDir+"/"+o)},Download.truth="https://MetaBake.github.io/mBakeCli/versions.yaml",Download}()
exports.Download=Download
var Static=function(){return function Static(o,n,t){}}()
exports.Static=Static
var YamlConfig=function(){return function YamlConfig(o){return yaml.load(fs.readFileSync(o))}}()
exports.YamlConfig=YamlConfig
var CSV2Json=function(){function CSV2Json(o){!o||o.length<1||(this.dir=FileOpsBase_1.Dirs.slash(o))}return CSV2Json.prototype.convert=function(){return new Promise(function(o,n){var t=this.dir+"/list.csv"
fs.existsSync(t)||n("not found")
var e=this
logger.info("1"),csv2JsonV2({noheader:!0}).fromFile(t).then(function(n){logger.info(n)
var t=e.dir+"/list.json"
fs.writeFileSync(t,JSON.stringify(n,null,3)),o("OK")})})},CSV2Json}()
exports.CSV2Json=CSV2Json
var FileOps=function(){function FileOps(o){this.root=FileOpsBase_1.Dirs.slash(o)}return FileOps.prototype.count=function(o){return FileHound.create().paths(this.root).depth(0).match(o+"*").findSync().length},FileOps.prototype.clone=function(o,n){var t=this
return new Promise(function(e,r){logger.info("copy?"),fs.copySync(t.root+o,t.root+n)
var i=t.root+n
logger.info(i),new FileOpsBase_1.Dat(i).write(),logger.info("copy!"),e("OK")})},FileOps.prototype.write=function(o,n){logger.info(this.root+o),fs.writeFileSync(this.root+o,n)},FileOps.prototype.read=function(o){return fs.readFileSync(this.root+o).toString()},FileOps.prototype.remove=function(o){var n=this.root+o
logger.info("remove:"+n),fs.existsSync(n)&&(fs.readdirSync(n).forEach(function(o){fs.unlinkSync(n+"/"+o)}),fs.rmdirSync(n))},FileOps.prototype.removeFile=function(o){var n=this.root+o
fs.unlinkSync(n)},FileOps}()
exports.FileOps=FileOps,module.exports={FileOps:FileOps,CSV2Json:CSV2Json,DownloadFrag:DownloadFrag,YamlConfig:YamlConfig,Download:Download,Static:Static,VersionNag:VersionNag}