// mB v6.06.07 on 2019-06-11T16:59:39.367Z
#!/usr/bin/env node
"use strict"
Object.defineProperty(exports,"__esModule",{value:!0})
var commandLineArgs=require("command-line-args"),clear=require("cli-clear"),Base_1=require("./lib/Base"),Extra_1=require("./lib/Extra"),FileOpsBase_1=require("./lib/FileOpsBase"),Wa_1=require("./lib/Wa"),FileOpsExtra_1=require("./lib/FileOpsExtra")
clear()
var cwd=process.cwd()
function version(){}function help(){new Base_1.Ver
process.exit()}var optionDefinitions=[{name:"mbake",defaultOption:!0},{name:"help",alias:"h",type:Boolean},{name:"version",alias:"v",type:Boolean},{name:"items",alias:"i",type:Boolean},{name:"css",alias:"s",type:Boolean},{name:"MinJS",alias:"t",type:Boolean},{name:"frag",alias:"f",type:Boolean},{name:"CMS",alias:"c",type:Boolean},{name:"watcher",alias:"w",type:Boolean},{name:"website",alias:"e",type:Boolean},{name:"CRUD",alias:"u",type:Boolean}],argsParsed=commandLineArgs(optionDefinitions),arg=argsParsed.mbake
function unzipCRUD(){new FileOpsExtra_1.Download("CRUD",__dirname).autoZ()}function unzipS(){new FileOpsExtra_1.Download("website",__dirname).autoZ()}function unzipE(){new FileOpsExtra_1.Download("CMS",__dirname).autoZ()}function frag(e){new FileOpsExtra_1.DownloadFrag(e,!1)}if(arg)if((arg=FileOpsBase_1.Dirs.slash(arg)).startsWith("/"));else if(arg.startsWith("..")){arg=arg.substring(2)
var d=cwd,n=(d=FileOpsBase_1.Dirs.slash(d)).lastIndexOf("/")
arg=(d=d.substring(0,n))+arg}else arg=arg.startsWith(".")?cwd:cwd+"/"+arg
function bake(e){(new Base_1.MBake).bake(e,0).then(function(e){process.exit()})}function itemize(e){(new Base_1.MBake).itemizeNBake(e,0).then(function(e){process.exit()})}function css(e){(new Extra_1.Sas).css(e).then(function(e){process.exit()})}function minJS(e){var a=new Extra_1.MinJS
a.ts(e).then(function(s){a.min(e)})}argsParsed.items?itemize(arg):argsParsed.css?css(arg):argsParsed.CMS?unzipE():argsParsed.CRUD?unzipCRUD():argsParsed.website?unzipS():argsParsed.MinJS?minJS(arg):argsParsed.frag?frag(arg):argsParsed.version?version():argsParsed.help?help():argsParsed.watcher?Wa_1.Wa.watch(arg,argsParsed.port,argsParsed["reload-port"]):arg?bake(arg):help()