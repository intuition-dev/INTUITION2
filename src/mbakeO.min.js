// mB v6.06.07 on 2019-06-11T16:59:39.367Z
#!/usr/bin/env node
"use strict"
Object.defineProperty(exports,"__esModule",{value:!0})
var AdmZip=require("adm-zip"),commandLineArgs=require("command-line-args"),Base_1=require("./lib/Base"),Wa_1=require("./lib/Wa"),Spider_1=require("./lib/Spider"),FileOpsBase_1=require("./lib/FileOpsBase"),FileOpsExtra_1=require("./lib/FileOpsExtra"),cwd=process.cwd()
function version(){}function help(){}var optionDefinitions=[{name:"mbake-x",defaultOption:!0},{name:"watcher",alias:"w",type:Boolean},{name:"port",alias:"p",type:String},{name:"reload-port",alias:"r",type:String},{name:"prod",type:Boolean},{name:"comps",alias:"c",type:Boolean},{name:"bakeP",type:Boolean},{name:"bakeS",type:Boolean},{name:"bakeD",type:Boolean},{name:"ops",type:Boolean},{name:"map",alias:"m",type:Boolean},{name:"csv2Json",alias:"l",type:Boolean}],argsParsed=commandLineArgs(optionDefinitions),arg=argsParsed.mbake-x
function frag(e){new FileOpsExtra_1.DownloadFrag(e,!0)}function unzipL(){var e=__dirname+"/slidesEx.zip"
new AdmZip(e).extractAllTo(cwd,!0),process.exit()}function unzipH(){var e=__dirname+"/dash.zip"
new AdmZip(e).extractAllTo(cwd,!0),process.exit()}function csv2Json(e){new FileOpsExtra_1.CSV2Json(e).convert()}function map(e){new Spider_1.Map(e).gen()}function comps(e){(new Base_1.MBake).compsNBake(e,0).then(function(e){process.exit()})}function prod(e){(new Base_1.MBake).clearToProd(e),process.exit()}function bakeP(e){(new Base_1.MBake).bake(e,3).then(function(e){process.exit()})}function bakeS(e){(new Base_1.MBake).bake(e,2).then(function(e){process.exit()})}function bakeD(e){(new Base_1.MBake).bake(e,1).then(function(e){process.exit()})}if(arg)if((arg=FileOpsBase_1.Dirs.slash(arg)).startsWith("/"));else if(arg.startsWith("..")){arg=arg.substring(2)
var d=cwd,n=(d=FileOpsBase_1.Dirs.slash(d)).lastIndexOf("/")
arg=(d=d.substring(0,n))+arg}else arg=cwd+"/"+arg
if(argsParsed.comps)try{comps(arg)}catch(e){}else argsParsed.csv2Json?csv2Json(arg):argsParsed.watcher?Wa_1.Wa.watch(arg,argsParsed.port,argsParsed["reload-port"]):argsParsed.dash?unzipH():argsParsed.map?map(arg):argsParsed.slides?unzipL():argsParsed.prod?prod(arg):argsParsed.bakeP?bakeP(arg):argsParsed.bakeS?bakeS(arg):argsParsed.bakeD?bakeD(arg):argsParsed.ops?frag(arg):argsParsed.version?version():argsParsed.help?help():arg||help()