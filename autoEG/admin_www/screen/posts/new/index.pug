extends /layout/layout_edit

block main
	script(src=ROOT+ 'screen/posts/tags/medialist-tag.js')
	script.
		depp.require(['style','ma-client', 'login'], function() {
			console.log('loadjs ready, user is logged in, will call itemize')
			//window.aSrv.getItems('blog').then(listRes)
		})

		function listRes(resp) {
			items = resp.data._cmd
			//-alert(items)
			depp.done('feed')
		}

	p
	#edittitlep.container
		.form-group
			input.form-input(name='title', id='title', placeholder='Blog Title')
	p
	//-#edittabp.container
		ul.tab
			li.tab-item.active
				a(nohref) Markdown&nbsp;
			li.tab-item
				a(nohref) View&nbsp;
	#editorp.container
		textarea#cms1
block props
	.accordion
		input#accordion-1(type='checkbox', name='accordion-checkbox', hidden='')
		label.accordion-header(for='accordion-1')
			.flex.edge
				h6.left Status
				.right
				svg.feather.feather-chevron-down(viewBox='0 0 24 24')
					polyline(points='6 9 12 15 18 9')
				svg.feather.feather-chevron-up(viewBox='0 0 24 24')
					polyline(points='18 15 12 9 6 15')
		.accordion-body
			#publishdate.card
				.card-body
					.accordion
						input#accordion-2a(type='checkbox', name='accordion-checkbox', hidden='')
						label.accordion-header(for='accordion-2a')
							.flex.edge
								.left
									svg.feather.feather-calendar(viewBox='0 0 24 24')
										rect(x='3', y='4', width='18', height='18', rx='2', ry='2')
										line(x1='16', y1='2', x2='16', y2='6')
										line(x1='8', y1='2', x2='8', y2='6')
										line(x1='3', y1='10', x2='21', y2='10')
								.left.text-bold Publish Immediately
								.right
								svg.feather.feather-chevron-down(viewBox='0 0 24 24')
									polyline(points='6 9 12 15 18 9')
								svg.feather.feather-chevron-up(viewBox='0 0 24 24')
									polyline(points='18 15 12 9 6 15')
						.accordion-body
							p
							.text-center Choose a date to schedule:
							include tags/calendar

	.accordion
		input#accordion-2(type='checkbox', name='accordion-checkbox', hidden='')
		label.accordion-header(for='accordion-2')
			.flex.edge
				h6.left Tags
				.right
				svg.feather.feather-chevron-down(viewBox='0 0 24 24')
					polyline(points='6 9 12 15 18 9')
				svg.feather.feather-chevron-up(viewBox='0 0 24 24')
					polyline(points='18 15 12 9 6 15')
		.accordion-body
			.card
				.card-body
					//-include tags/autocomplete
					input.form-input(type='text', id='tags', placeholder='comma-delimited tags')
	.accordion
		input#accordion-3(type='checkbox', name='accordion-checkbox', hidden='')
		label.accordion-header(for='accordion-3')
			.flex.edge
				h6.left Featured Image
				.right
				svg.feather.feather-chevron-down(viewBox='0 0 24 24')
					polyline(points='6 9 12 15 18 9')
				svg.feather.feather-chevron-up(viewBox='0 0 24 24')
					polyline(points='18 15 12 9 6 15')
		.accordion-body
			#featuredimage.card
				.card-body
					input.form-input(type='file', id='f1', placeholder='image') 
				.card-image
					img#f1img.img-responsive
					#f1del
						a(hohref onclick="deleteFeaturedImage()")
							svg.feather.feather-x(viewBox='0 0 24 24')
								line(x1='18', y1='6', x2='6', y2='18')
								line(x1='6', y1='6', x2='18', y2='18')

	.accordion
		input#accordion-4(type='checkbox', name='accordion-checkbox', hidden='')
		label.accordion-header(for='accordion-4')
			.flex.edge
				h6.left Media
				.right
				svg.feather.feather-chevron-down(viewBox='0 0 24 24')
					polyline(points='6 9 12 15 18 9')
				svg.feather.feather-chevron-up(viewBox='0 0 24 24')
					polyline(points='18 15 12 9 6 15')
		.accordion-body
			#mediax.card
				.card-body
					input.form-input(multiple type='file' id='fx', placeholder='other images')
			medialist-tag


	script.
		const tag = riot.mount('medialist-tag')[0] // mount the first tag
		var mediaitems = []

		function copyToClipboard(str) {
			var el = document.createElement('textarea');
			el.value = str;
			el.setAttribute('readonly', '');
			el.style = {position: 'absolute', left: '-9999px'};
			document.body.appendChild(el);
			el.select();
			document.execCommand('copy');
			document.body.removeChild(el);
		}

		function deleteFeaturedImage(){
			depp.require(['style'], function(){
				$('#f1').val('')
				$('#f1img').attr('src', '')
				$('#f1del').hide();
				//#('#featuredimage .card-image').attr("visibility", "hidden");
				$('#featuredimage .card-body').show();
			})
		}
		function deleteMedia(filename){
			let sz = mediaitems.length
			let clone = []
			for(i = 0; i < sz; i++) {
				var item = mediaitems[i]
				if (item.filename != filename) clone.push(item)
			}
			mediaitems = clone
			$('#fx').val('')
			tag.render(mediaitems)
		}

		depp.require(['style','ma-client'], function () {

			$('#title').keyup(function(){
				if(this.value.trim()) {
					$('.save').removeClass('disabled2')
				} else {
					$('.save').addClass('disabled2')
				}
			})

			$('#f1').change(function(){
				//displayFeaturedImage
				if (this.files && this.files[0]) {
					var reader = new FileReader();
					reader.readAsDataURL(this.files[0]);
					reader.onload = function(e) {
						$('#f1img').attr('src', e.target.result);
						$('#featuredimage .card-body').hide();
						//#('#featuredimage .card-image').attr("visibility", "visible");
						$('#f1del').show();
					}
				}
			}) //upload featured image



			$('#fx').change(function(){
				//display all images
				if (this.files){
					let len = this.files.length
					for (var i = 0; i < len; i++)
					{
						let f = this.files[i]
						if(!f.type.match('image.*')) continue
						let fname = f.name
						let dup = false, sz = mediaitems.length
						for(j = 0; j < sz; j++) { //no duplicates
							if(mediaitems[j].filename === fname) {dup = true; break}
						}
						if (dup) continue;
						let reader = new FileReader();
						reader.readAsDataURL(f);
						reader.onload = function(e) {
							mediaitems.push({filename: fname, src: e.target.result})
							tag.render(mediaitems)
						}
					}
				}
			}) //upload media


			$('.save').click(function(){
				if ($(this).hasClass('disabled2') //validation
					|| myCodeMirror.getDoc().getValue().trim()=='## Blog Entry here'
				) { 
					showError("You haven't written anything yet!")
					return
				}
				let f1 = $('#f1')[0].files[0];
				if (f1)
				{
					//read again to be safe 
					let reader = new FileReader();
					reader.readAsDataURL(f1);
					reader.onload = function(e) {
						let b64 = e.target.result
						fileDone(b64, f1.name)
					}
				}
				else
					fileDone()
			})// click
		})//require

		function fileDone(f1data, f1name) {
			let title = $('#title').val()
			let content = myCodeMirror.getDoc().getValue()
			content.replace('## Blog Entry here', '') //just in case it's left over

			let tags  = $('#tags').val()
			let date_published = moment().toISOString()
			let date1 = $('#date1').val()
			if (date1 != '')
				date_published = moment(date1, 'D MMMM YYYY').toISOString()
			
			let fx = JSON.stringify(mediaitems)

			window.aSrv.newBlog('blog', title, 'No summary', content, date_published, 
				tags, f1name, f1data, fx
			).then(newBlogRes)
		}

		function newBlogRes(resp) {
			showSuccess('Blog entry saved successfully!', function(){
				window.location.href='/screen/posts'
			})
		}


		depp.require('style', function () {
			/*
				,'//cdn.jsdelivr.net/npm/codemirror@5.37.0/theme/solarized.css'
				,'//cdn.jsdelivr.net/npm/codemirror@5.37.0/mode/markdown/markdown.js'
				,'//cdn.jsdelivr.net/npm/codemirror@5.37.0/mode/pug/pug.js'
				,'//cdn.jsdelivr.net/npm/codemirror@5.37.0/mode/yaml/yaml.js'
				,'//cdn.jsdelivr.net/npm/codemirror@5.37.0/keymap/sublime.js'
			*/
			depp.define({'cmjs': [
				'//cdn.jsdelivr.net/npm/codemirror@5.40.2/lib/codemirror.css'
				,'//cdn.jsdelivr.net/npm/codemirror@5.40.2/lib/codemirror.min.js'
				,'//cdn.jsdelivr.net/npm/codemirror@5.40.2/mode/markdown/markdown.js'
			]})
		})//require

		depp.require('cmjs', function () {
			_initCodeMirror()
		})//require

		let myCodeMirror
		function _initCodeMirror() {
			myCodeMirror = CodeMirror.fromTextArea(
				document.querySelector('#cms1') ,
					{
						mode: 'markdown'
						, lineWrapping: true
						, cursorHeight: 0.85
					}
				)
			myCodeMirror.setSize('100%', '100%')
			myCodeMirror.setValue('## Blog Entry here\n\n\n\n')
			depp.done('cm')
		}// initCM()

		/*function read( data) {
			let fn_ = data[0]
			let url = '/api/read?secret='
			let folder = '&folder='
			let fn = '&fn='
			url = url + getSec() + folder + getPage() + fn + fn_
			console.log(url)

			fetch(url)
				.then(function(resp) {
					return resp.text()
				}).then(function(ret) {

					loadjs.ready('cm', function() {
						myCodeMirror.getDoc().setValue(ret)
					})

				}).catch(function(err) {
					console.log('error', err)
			})//fetch
		}//()*/





