extends /layout/layout_edit

block main
	script.
		//Edit only: query for item 
		depp.require(['ma-client', 'login'], function() {
			console.log('user is logged in, will get data')
			let qs = window.location.search
			if (qs && qs.indexOf('?')==0)
			{
				window.aSrv.getItem(qs).then(function(resp) {
					data = resp.data._cmd
					depp.done('data')
				})
			}
			else alert('Query string missing')
		})

	p
	#edittitlep.container
		.form-group
			input.form-input(name='title', id='title', placeholder='Blog Title')
			input(name='url', id='url', type='hidden')
	p
	#editorp.container
		editor-tag

//- properties panel is in /layout/layout_edit.pug

block script
	script.
		const editor = riot.mount('editor-tag')[0] // mount the first tag
		const itag = riot.mount('featuredimage-tag')[0]
		const mtag = riot.mount('medialist-tag')[0] 

		editor.render()

		function deleteMedia(filename){
			$('#fx').val('')
			mtag.deleteItem(filename)
		}

		depp.require(['style','ma-client'], function () {

			$('#title').keyup(function(){
				if(this.value.trim()) {
					$('.save').removeClass('disabled2')
					$('.save').addClass('btn-primary')
				} else {
					$('.save').addClass('disabled2')
					$('.save').removeClass('btn-primary')
				}
			})

			$('#date1').change(function(){
				$('#pdate').text(this.value)
			})

			$('#fx').change(function(){ //upload media
				mtag.upload(this.files)
			}) 

			$('.save').click(function(){
				if (validate(this))
					save()
			})// click

		})//require

		function validate(el) {
			if ($(el).hasClass('disabled2')
					|| editor.text()=='## Blog Entry here'
			) { 
				showError("You haven't written anything yet!")
				return false
			}
			return true
		}

		function save() {

			$('.save').addClass('loading')
			let title = $('#title').val()
			let url = $('#url').val()
			let content = editor.text()
			content.replace('## Blog Entry here', '') //just in case it's left over

			let tags  = $('#tags').val()

			//TODO: handle
			let date_published = moment().toISOString()
			let date1 = $('#date1').val()
			if (date1 != '')
				date_published = moment(date1, 'D MMMM YYYY').toISOString()

			let f1name = itag.filename
			let f1data = itag.src

			let fx = JSON.stringify(mtag.items)

			window.aSrv.updateItem('blog/'+url, title, 'No summary', content, date_published, 
				tags, f1name, f1data, fx
			).then(successRes)
			.catch(errorRes)
		}

		function successRes(resp) {
			$('.save').removeClass('loading')
			showSuccess('Blog entry saved successfully!', function(){
				window.location.href='/screen/posts'
			})
		}
		function errorRes(resp) {
			$('.save').removeClass('loading')
			showError('Error'+resp.message)
		}

		depp.require(['style','data','editor'], function () {
			//alert(JSON.stringify(data))
			$('#title').val(data.title)
			$('#url').val(data.url) //the folder for the item
			//Editor
			editor.text(data.content)
			$('#tags').val(data.tags)
			//TODO: enhance date published
			if (data.date_published) {
				let d = moment(data.date_published, 'YYYY-MM-DDTHH:mm:ss.sssZ').format('D MMMM YYYY') 
				$('#pdate').text(d)
				picker.pickadate('set').set('select', d, { format: 'D MMMM YYYY' })
			}

			let abs_path = '#{PROD_ROOT}/blog/'+data.url
			// Featured image
			if (data.image) //src
			{
				if (data.image.indexOf('//')>-1) //external URL
					itag.setImg(data.image, data.image)
				else
					itag.setImg(data.image, abs_path+'/'+data.image)
			}
			//Media
			mtag.render(data.media, abs_path)

		})//require 


		

		







