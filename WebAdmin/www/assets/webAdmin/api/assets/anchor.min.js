// mB v5.04.31 on 2019-04-26T20:35:30.115Z
!function(root, factory) {
 'use strict';
 'function' == typeof define && define.amd ? define([], factory) : 'object' == typeof module && module.exports ? module.exports = factory() : (root.AnchorJS = factory(), 
 root.anchors = new root.AnchorJS());
}(this, function() {
 'use strict';
 return function AnchorJS(options) {
  function _applyRemainingDefaultOptions(opts) {
   opts.icon = opts.hasOwnProperty('icon') ? opts.icon : '', opts.visible = opts.hasOwnProperty('visible') ? opts.visible : 'hover', 
   opts.placement = opts.hasOwnProperty('placement') ? opts.placement : 'right', opts.class = opts.hasOwnProperty('class') ? opts.class : '', 
   opts.truncate = opts.hasOwnProperty('truncate') ? Math.floor(opts.truncate) : 64;
  }
  function _getElements(input) {
   var elements;
   if ('string' == typeof input || input instanceof String) {
    elements = [].slice.call(document.querySelectorAll(input));
   } else {
    if (!(Array.isArray(input) || input instanceof NodeList)) {
     throw new Error('The selector provided to AnchorJS was invalid.');
    }
    elements = [].slice.call(input);
   }
   return elements;
  }
  function _addBaselineStyles() {
   if (null === document.head.querySelector('style.anchorjs')) {
    var firstStyleEl, style = document.createElement('style');
    style.className = 'anchorjs', style.appendChild(document.createTextNode('')), void 0 === (firstStyleEl = document.head.querySelector('[rel="stylesheet"], style')) ? document.head.appendChild(style) : document.head.insertBefore(style, firstStyleEl), 
    style.sheet.insertRule(" .anchorjs-link {   opacity: 0;   text-decoration: none;   -webkit-font-smoothing: antialiased;   -moz-osx-font-smoothing: grayscale; }", style.sheet.cssRules.length), 
    style.sheet.insertRule(" *:hover > .anchorjs-link, .anchorjs-link:focus  {   opacity: 1; }", style.sheet.cssRules.length), 
    style.sheet.insertRule(" [data-anchorjs-icon]::after {   content: attr(data-anchorjs-icon); }", style.sheet.cssRules.length), 
    style.sheet.insertRule(" @font-face {   font-family: \"anchorjs-icons\";   src: url(data:n/a;base64,AAEAAAALAIAAAwAwT1MvMg8yG2cAAAE4AAAAYGNtYXDp3gC3AAABpAAAAExnYXNwAAAAEAAAA9wAAAAIZ2x5ZlQCcfwAAAH4AAABCGhlYWQHFvHyAAAAvAAAADZoaGVhBnACFwAAAPQAAAAkaG10eASAADEAAAGYAAAADGxvY2EACACEAAAB8AAAAAhtYXhwAAYAVwAAARgAAAAgbmFtZQGOH9cAAAMAAAAAunBvc3QAAwAAAAADvAAAACAAAQAAAAEAAHzE2p9fDzz1AAkEAAAAAADRecUWAAAAANQA6R8AAAAAAoACwAAAAAgAAgAAAAAAAAABAAADwP/AAAACgAAA/9MCrQABAAAAAAAAAAAAAAAAAAAAAwABAAAAAwBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAMCQAGQAAUAAAKZAswAAACPApkCzAAAAesAMwEJAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAAAAAAAAAAAAQAAg//0DwP/AAEADwABAAAAAAQAAAAAAAAAAAAAAIAAAAAAAAAIAAAACgAAxAAAAAwAAAAMAAAAcAAEAAwAAABwAAwABAAAAHAAEADAAAAAIAAgAAgAAACDpy//9//8AAAAg6cv//f///+EWNwADAAEAAAAAAAAAAAAAAAAACACEAAEAAAAAAAAAAAAAAAAxAAACAAQARAKAAsAAKwBUAAABIiYnJjQ3NzY2MzIWFxYUBwcGIicmNDc3NjQnJiYjIgYHBwYUFxYUBwYGIwciJicmNDc3NjIXFhQHBwYUFxYWMzI2Nzc2NCcmNDc2MhcWFAcHBgYjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAAADACWAAEAAAAAAAEACAAAAAEAAAAAAAIAAwAIAAEAAAAAAAMACAAAAAEAAAAAAAQACAAAAAEAAAAAAAUAAQALAAEAAAAAAAYACAAAAAMAAQQJAAEAEAAMAAMAAQQJAAIABgAcAAMAAQQJAAMAEAAMAAMAAQQJAAQAEAAMAAMAAQQJAAUAAgAiAAMAAQQJAAYAEAAMYW5jaG9yanM0MDBAAGEAbgBjAGgAbwByAGoAcwA0ADAAMABAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAP) format(\"truetype\"); }", style.sheet.cssRules.length);
   }
  }
  this.options = options || {}, this.elements = [], _applyRemainingDefaultOptions(this.options), 
  this.isTouchDevice = function() {
   return !!('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch);
  }, this.add = function(selector) {
   var elements, elsWithIds, idList, elementID, i, index, count, tidyText, newTidyText, readableID, anchor, visibleOptionToUse, indexesToDrop = [];
   if (_applyRemainingDefaultOptions(this.options), 'touch' === (visibleOptionToUse = this.options.visible) && (visibleOptionToUse = this.isTouchDevice() ? 'always' : 'hover'), 
   selector || (selector = 'h2, h3, h4, h5, h6'), 0 === (elements = _getElements(selector)).length) {
    return this;
   }
   for (_addBaselineStyles(), elsWithIds = document.querySelectorAll('[id]'), idList = [].map.call(elsWithIds, function assign(el) {
    return el.id;
   }), i = 0; i < elements.length; i++) {
    if (this.hasAnchorJSLink(elements[i])) {
     indexesToDrop.push(i);
    } else {
     if (elements[i].hasAttribute('id')) {
      elementID = elements[i].getAttribute('id');
     } else if (elements[i].hasAttribute('data-anchor-id')) {
      elementID = elements[i].getAttribute('data-anchor-id');
     } else {
      newTidyText = tidyText = this.urlify(elements[i].textContent), count = 0;
      do {
       void 0 !== index && (newTidyText = tidyText + '-' + count), index = idList.indexOf(newTidyText), 
       count += 1;
      } while (-1 !== index);
      index = void 0, idList.push(newTidyText), elements[i].setAttribute('id', newTidyText), 
      elementID = newTidyText;
     }
     readableID = elementID.replace(/-/g, ' '), (anchor = document.createElement('a')).className = 'anchorjs-link ' + this.options.class, 
     anchor.href = '#' + elementID, anchor.setAttribute('aria-label', 'Anchor link for: ' + readableID), 
     anchor.setAttribute('data-anchorjs-icon', this.options.icon), 'always' === visibleOptionToUse && (anchor.style.opacity = '1'), 
     '' === this.options.icon && (anchor.style.font = '1em/1 anchorjs-icons', 'left' === this.options.placement && (anchor.style.lineHeight = 'inherit')), 
     'left' === this.options.placement ? (anchor.style.position = 'absolute', anchor.style.marginLeft = '-1em', 
     anchor.style.paddingRight = '0.5em', elements[i].insertBefore(anchor, elements[i].firstChild)) : (anchor.style.paddingLeft = '0.375em', 
     elements[i].appendChild(anchor));
    }
   }
   for (i = 0; i < indexesToDrop.length; i++) {
    elements.splice(indexesToDrop[i] - i, 1);
   }
   return this.elements = this.elements.concat(elements), this;
  }, this.remove = function(selector) {
   for (var index, domAnchor, elements = _getElements(selector), i = 0; i < elements.length; i++) {
    (domAnchor = elements[i].querySelector('.anchorjs-link')) && (-1 !== (index = this.elements.indexOf(elements[i])) && this.elements.splice(index, 1), 
    elements[i].removeChild(domAnchor));
   }
   return this;
  }, this.removeAll = function() {
   this.remove(this.elements);
  }, this.urlify = function(text) {
   return this.options.truncate || _applyRemainingDefaultOptions(this.options), text.trim().replace(/\'/gi, '').replace(/[& +$,:;=?@"#{}|^~[`%!'<>\]\.\/\(\)\*\\]/g, '-').replace(/-{2,}/g, '-').substring(0, this.options.truncate).replace(/^-+|-+$/gm, '').toLowerCase();
  }, this.hasAnchorJSLink = function(el) {
   var hasLeftAnchor = el.firstChild && (' ' + el.firstChild.className + ' ').indexOf(' anchorjs-link ') > -1, hasRightAnchor = el.lastChild && (' ' + el.lastChild.className + ' ').indexOf(' anchorjs-link ') > -1;
   return hasLeftAnchor || hasRightAnchor || !1;
  };
 };
});